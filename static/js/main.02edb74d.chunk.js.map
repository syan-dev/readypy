{"version":3,"sources":["components/Workspace/Workspace.module.css","components/Header/Header.module.css","components/Icon/Logo.module.css","components/Icon/Logo.js","components/Header/Header.js","components/Workspace/Editor.js","components/Workspace/Terminal.js","components/Workspace/Workspace.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","grid","grid-col","grid-row","gutter-col","editor","gutter-row","gutter","panel","windowLabelCont","windowLabel","CodeMirror","header","title","actions","actionCont","actionItem","logo","LogoIcon","props","size","space","React","createElement","xmlns","width","height","className","classes","x","y","Header","onClick","handleLayoutChange","fill","viewBox","d","handleThemeChange","runCode","styleTheme","EditorView","baseTheme","&.cm-editor.cm-focused","outline","Editor","onChange","useCallback","value","viewUpdate","setValue","placeholder","basicSetup","defaultKeymap","extensions","python","lineWrapping","keymap","of","key","preventDefault","run","concat","_toConsumableArray","theme","Terminal","scrollBottom","ViewPlugin","fromClass","_class","_classCallCheck","this","_createClass","update","docChanged","view","scrollDOM","scrollTop","scrollHeight","runningState","lineNumbers","highlightActiveLine","highlightActiveLineGutter","editable","EditorState","readOnly","Workspace","useEffect","element","document","getElementById","style","removeInnerStyle","layout","Split","render","_ref","getGridProps","getGutterProps","Object","assign","id","editorValue","setEditorValue","clearTerminal","terminalValue","setTerminalValue","App","vscodeDark","vscodeDarkInit","settings","caret","fontFamily","githubLight","githubLightInit","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","setRunningState","_useState7","_useState8","mode","setMode","_useState9","_useState10","setTheme","_useState11","window","innerWidth","_useState12","setLayout","loadPyodide","indexURL","stdout","text","prev_text","stderr","then","pyodide","fix","input_fixed","question","answer","prompt","registerJsModule","runPython","runPythonAsync","catch","err","_step","lines","message","split","to","_iterator","_createForOfIteratorHelper","entries","s","n","done","_ref2","i","includes","e","f","splice","newtext","join","updateCode","prevLayout","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","StrictMode"],"mappings":"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","file":"static/js/main.02edb74d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Workspace_grid__1m4EP\",\"grid-col\":\"Workspace_grid-col__bR0Dt\",\"grid-row\":\"Workspace_grid-row__1u63W\",\"gutter-col\":\"Workspace_gutter-col__1I51l\",\"editor\":\"Workspace_editor__2BKNi\",\"gutter-row\":\"Workspace_gutter-row__2Cw2J\",\"gutter\":\"Workspace_gutter__2EXl6\",\"panel\":\"Workspace_panel__1OiOu\",\"windowLabelCont\":\"Workspace_windowLabelCont__3qqfw\",\"windowLabel\":\"Workspace_windowLabel__3EbGZ\",\"CodeMirror\":\"Workspace_CodeMirror__2o2g8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2xfuR\",\"title\":\"Header_title__cW3ln\",\"actions\":\"Header_actions__1uxXH\",\"actionCont\":\"Header_actionCont__1_Yji\",\"actionItem\":\"Header_actionItem__3wfN5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__QzK70\"};","import React from 'react';\nimport classes from './Logo.module.css';\n\n\n\nconst LogoIcon = (props) => {\n    const size = props.size;\n    const space = props.size/10;\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width={size*3 + space*2} height={size*2 + space} className={classes.logo}>\n            <rect \n                x={size + space} y=\"0\" \n                width={size} height={size} \n                // fill={color} \n            />\n            <rect \n                x={(size) * 2 + space * 2} y=\"0\" \n                width={size} height={size} \n                // fill={color} \n            />\n            <rect \n                x=\"0\"\n                y={size + space}\n                width={size} \n                height={size} \n                // fill={color} \n            />\n            <rect \n                x={size + space} \n                y={size + space} \n                width={size} \n                height={size} \n                // fill={color} \n            />\n        </svg>\n    );\n};\n\nexport default LogoIcon;","import React from \"react\";\n\nimport classes from \"./Header.module.css\";\nimport LogoIcon from \"../Icon/Logo\";\n\nconst Header = (props) => {\n    return (\n        <div className={classes.header}>\n            <h1>\n                <span className={classes.logo}><LogoIcon size={15} /></span>\n                <span className={classes.title}>ReadyPy</span>\n            </h1>\n            <div className={classes.actions}>\n                <nav className={classes.actionCont}>\n                    <div className={classes.actionItem}>\n                        <button onClick={props.handleLayoutChange}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n                                <path d=\"M0,2.3C0,1,0.9,0,2,0h12c1.1,0,2,1,2,2.3v11.4c0,1.3-0.9,2.3-2,2.3H2c-1.1,0-2-1-2-2.3V2.3z M8.5,1.1v13.7H14 c0.6,0,1-0.5,1-1.1V2.3c0-0.6-0.4-1.1-1-1.1H8.5z M7.5,1.1H2c-0.6,0-1,0.5-1,1.1v11.4c0,0.6,0.4,1.1,1,1.1h5.5V1.1z\"/>\n                            </svg>\n                            Layout\n                        </button>\n                    </div>\n                    <div className={classes.actionItem}>\n                        <button onClick={props.handleThemeChange}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n                                <path d=\"M8 15A7 7 0 1 0 8 1v14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16z\" />\n                            </svg>\n                            Theme\n                        </button>\n                    </div>\n                    <div className={classes.actionItem}>\n                        <button onClick={props.runCode}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n                            <path d=\"M13,8L2.7,2v12L13,8z M14.4,6.8c0.7,0.4,0.9,1.3,0.5,1.9c-0.1,0.2-0.3,0.4-0.5,0.5L3.1,15.8c-0.9,0.5-2.2-0.1-2.2-1.2V1.4 c0-1.2,1.3-1.8,2.2-1.2L14.4,6.8z\"/>\n                            </svg>\n                            Run\n                        </button>\n                    </div>\n                </nav>\n            </div>\n        </div>\n    );\n};\n\nexport default Header;","import React, { useCallback } from 'react';\nimport CodeMirror from '@uiw/react-codemirror';\nimport { EditorView } from '@codemirror/view';\nimport { python } from '@codemirror/lang-python';\nimport { keymap } from \"@codemirror/view\";\nimport { defaultKeymap } from '@codemirror/commands';\n\n\n\nconst styleTheme = EditorView.baseTheme({\n    '&.cm-editor.cm-focused': {\n        outline: '0px',\n    }\n});\n\n\nconst Editor = (props) => {\n    const onChange = useCallback((value, viewUpdate) => {\n        props.setValue(value);\n    }, []);\n\n    return (\n        <CodeMirror\n            value={props.value}\n            height=\"100%\"\n            placeholder=\"Welcome to ReadyPy. Write your Python code here...\"\n            basicSetup={{\n                defaultKeymap: false\n            }}\n            extensions={[\n                python(),\n                EditorView.lineWrapping,\n                styleTheme,\n                keymap.of([\n                    {\n                        key: 'Shift-Enter',\n                        preventDefault: true,\n                        run() {\n                            props.runCode();\n                        },\n                    },\n                    ...defaultKeymap, // add in all of the default keymappings from codemirror\n                ])\n            ]}\n            onChange={onChange}\n            theme={props.theme}\n        />\n    );\n};\n\nexport default Editor;","import React from 'react';\nimport CodeMirror from '@uiw/react-codemirror';\nimport { ViewPlugin, EditorView } from '@codemirror/view';\nimport { EditorState } from '@codemirror/state';\n\n\nconst Terminal = (props) => {\n\n    const scrollBottom = ViewPlugin.fromClass(\n        class {\n            update(update) {\n                if (update.docChanged) {\n                    update.view.scrollDOM.scrollTop = update.view.scrollDOM.scrollHeight;\n                }\n            }\n        }\n    );\n\n    return (\n        <CodeMirror\n            value={props.runningState ? 'Running code...' : props.value}\n            height=\"100%\"\n            basicSetup={{\n                lineNumbers: false,\n                highlightActiveLine: false,\n                highlightActiveLineGutter: false\n            }}\n            extensions={[\n                EditorView.lineWrapping,\n                EditorView.editable.of(false),\n                EditorState.readOnly.of(true),\n                scrollBottom\n            ]}\n            theme={props.theme}\n        />\n    );\n};\n\nexport default Terminal;","import React, { useEffect } from 'react';\nimport Split from 'react-split-grid';\n\nimport Editor from './Editor';\nimport Terminal from './Terminal';\nimport classes from './Workspace.module.css';\n\n\nconst Workspace = (props) => {\n\n    const removeInnerStyle = () => {\n        const element = document.getElementById('split');\n        if (element) {\n            element.style = '';\n        }\n    };\n\n    useEffect(() => {\n        removeInnerStyle();\n    }, [props.layout]);\n\n    return (\n        <Split\n            render={({\n                getGridProps,\n                getGutterProps,\n            }) => (\n                <div\n                    id='split'\n                    className={`\n                        ${classes['grid']}\n                        ${props.layout === 'col' ? classes['grid-col'] : classes['grid-row']}\n                    `}\n                    {...getGridProps()}\n                >\n                    <div className={classes.panel} id='editor'>\n                        <div className={classes.windowLabelCont}>\n                            <div className={classes.windowLabel}>\n                                <span>Python</span>\n                            </div>\n                            <div className={classes.windowLabel}>\n                                <button onClick={props.runCode}>\n                                    Shift + Enter\n                                </button>\n                            </div>\n                        </div>\n                        <div className={classes.CodeMirror}>\n                            <Editor\n                                value={props.editorValue}\n                                theme={props.theme}\n                                setValue={props.setEditorValue}\n                                runCode={props.runCode}\n                            />\n                        </div>\n                    </div>\n\n                    <div\n                        id='split-gutter'\n                        className={`\n                            ${classes.gutter} \n                            ${props.layout === 'col' ? classes['gutter-col'] : classes['gutter-row']}\n                        `}\n                        {...(props.layout === 'col' ? getGutterProps('column', 1) : getGutterProps('row', 1))}\n                    >\n                    </div>\n\n                    <div className={classes.panel} id='terminal'>\n                        <div className={classes.windowLabelCont}>\n                            <div className={classes.windowLabel}>\n                                <span>Shell</span>\n                            </div>\n                            <div className={classes.windowLabel}>\n                                <button onClick={props.clearTerminal}>\n                                    Clear\n                                </button>\n                            </div>\n                        </div>\n                        <div className={classes.CodeMirror}>\n                            <Terminal\n                                value={props.terminalValue}\n                                theme={props.theme}\n                                setValue={props.setTerminalValue}\n                                runningState={props.runningState}\n                            />\n                        </div>\n                    </div>\n                </div>\n            )}\n        />\n    );\n};\n\nexport default Workspace;","import React, { useState } from 'react';\nimport './App.css';\n\nimport Header from './components/Header/Header'\nimport Workspace from './components/Workspace/Workspace';\nimport { loadPyodide } from \"pyodide\";\nimport { vscodeDarkInit } from '@uiw/codemirror-theme-vscode';\nimport { githubLightInit } from '@uiw/codemirror-theme-github';\n\n\nfunction App() {\n  const vscodeDark = vscodeDarkInit({\n    settings: {\n      caret: '#c6c6c6',\n      fontFamily: '\"Menlo\", \"Monaco\", \"Consolas\", \"Andale Mono\", \"Ubuntu Mono\", \"Courier New\", monospace'\n    }\n  });\n\n  const githubLight = githubLightInit({\n    settings: {\n      caret: '#c6c6c6',\n      fontFamily: '\"Menlo\", \"Monaco\", \"Consolas\", \"Andale Mono\", \"Ubuntu Mono\", \"Courier New\", monospace'\n    }\n  });\n\n  const [editorValue, setEditorValue] = useState(\"\");\n  const [terminalValue, setTerminalValue] = useState(\"\");\n  const [runningState, setRunningState] = useState(false);\n  const [mode, setMode] = useState('dark');\n  const [theme, setTheme] = useState(vscodeDark);\n  const [layout, setLayout] = useState(window.innerWidth < 768 ? 'row' : 'col');\n\n  const runCode = () => {\n\n    setTerminalValue(\"Running Code ...\\n\");\n\n    loadPyodide({\n      indexURL: \"https://cdn.jsdelivr.net/pyodide/v0.23.3/full\",\n      stdout: (text) => {\n        setTerminalValue((prev_text) => {\n          return prev_text + text + '\\n';\n        });\n      },\n      stderr: (text) => {\n        setTerminalValue((prev_text) => {\n          return prev_text + text + '\\n';\n        });\n      },\n    }).then((pyodide) => {\n      setTerminalValue(\"\");\n\n      const fix = {input_fixed : (question) => {\n        let answer = prompt(question);\n        setTerminalValue((prev_text) => {\n          return prev_text + question + answer + '\\n';\n        });\n        return answer\n      }};\n\n      pyodide.registerJsModule('fix', fix)\n    \n      pyodide.runPython(`\n        from fix import input_fixed\n        input = input_fixed\n        __builtins__.input = input_fixed\n      `);\n\n      setRunningState(true);\n\n      pyodide\n      .runPythonAsync(editorValue)\n      .then(() => {\n        setRunningState(false);\n      })\n      .catch((err) => {\n          var lines = err.message.split(\"\\n\");\n          let to = 1;\n          for (const [i, l] of lines.entries()) {\n              if (l.includes('File \"<exec>\"')) {\n                  to = i;\n                  break;\n              }\n          }\n          lines.splice(1, to - 1);\n          var newtext = lines.join(\"\\n\");\n          setTerminalValue(newtext);\n          setRunningState(false);\n      });\n    });\n  };\n\n  const clearTerminal = () => {\n    setTerminalValue(\"\");\n  };\n\n  const handleThemeChange = () => {\n    if (mode === 'light') {\n      setTheme(vscodeDark);\n      setMode('dark');\n    } else {\n      setTheme(githubLight);\n      setMode('light');\n    }\n  };\n\n  const handleLayoutChange = () => {\n    setLayout((prevLayout) => (prevLayout === 'col' ? 'row' : 'col'));\n  };\n\n  return (\n    <div id='app' className={mode}>\n      <Header\n        runCode={runCode}\n        updateCode={setEditorValue}\n        handleThemeChange={handleThemeChange}\n        runningState={runningState}\n        handleLayoutChange={handleLayoutChange}\n      />\n      <Workspace\n        theme={theme}\n        layout={layout}\n        editorValue={editorValue}\n        setEditorValue={setEditorValue}\n        terminalValue={terminalValue}\n        setTerminalValue={setTerminalValue}\n        runCode={runCode}\n        clearTerminal={clearTerminal}\n        />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}