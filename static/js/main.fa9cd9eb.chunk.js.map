{"version":3,"sources":["components/Workspace/Workspace.module.css","components/Header/Header.module.css","components/Icon/Logo.module.css","components/Icon/Logo.js","components/Header/Header.js","components/Workspace/Editor.js","components/Workspace/Terminal.js","components/Workspace/Workspace.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","grid","grid-col","grid-row","gutter-col","editor","gutter-row","gutter","panel","windowLabelCont","windowLabel","CodeMirror","header","title","actions","actionCont","actionItem","logo","LogoIcon","props","size","space","React","createElement","xmlns","width","height","className","classes","x","y","Header","onClick","handleLayoutChange","fill","viewBox","d","handleThemeChange","runCode","styleTheme","EditorView","baseTheme","&.cm-editor.cm-focused","outline","Editor","onChange","useCallback","value","viewUpdate","setValue","placeholder","basicSetup","defaultKeymap","autocompletion","extensions","python","lineWrapping","keymap","of","key","preventDefault","run","concat","_toConsumableArray","theme","Terminal","scrollBottom","ViewPlugin","fromClass","_class","_classCallCheck","this","_createClass","update","docChanged","view","scrollDOM","scrollTop","scrollHeight","lineNumbers","highlightActiveLine","highlightActiveLineGutter","editable","EditorState","readOnly","Workspace","useEffect","element","document","getElementById","style","removeInnerStyle","layout","Split","render","_ref","getGridProps","getGutterProps","Object","assign","id","editorValue","setEditorValue","clearTerminal","terminalValue","setTerminalValue","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","App","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","mode","setMode","_useState5","draculaInit","settings","caret","fontFamily","_useState6","setTheme","_useState7","window","innerWidth","_useState8","setLayout","_useState9","_useState10","pyodide","setPyodide","_useState11","_useState12","initializePyodide","_asyncToGenerator","_callee","py","fix","_context","loadPyodide","indexURL","stdout","text","prev_text","stderr","input_fixed","question","answer","prompt","registerJsModule","runPython","apply","arguments","runPythonAsync","_step","lines","message","split","to","_iterator","_createForOfIteratorHelper","entries","s","n","_ref2","_ref3","includes","e","f","splice","newtext","join","updateCode","githubLightInit","prevLayout","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","StrictMode"],"mappings":"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","file":"static/js/main.fa9cd9eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Workspace_grid__1m4EP\",\"grid-col\":\"Workspace_grid-col__bR0Dt\",\"grid-row\":\"Workspace_grid-row__1u63W\",\"gutter-col\":\"Workspace_gutter-col__1I51l\",\"editor\":\"Workspace_editor__2BKNi\",\"gutter-row\":\"Workspace_gutter-row__2Cw2J\",\"gutter\":\"Workspace_gutter__2EXl6\",\"panel\":\"Workspace_panel__1OiOu\",\"windowLabelCont\":\"Workspace_windowLabelCont__3qqfw\",\"windowLabel\":\"Workspace_windowLabel__3EbGZ\",\"CodeMirror\":\"Workspace_CodeMirror__2o2g8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2xfuR\",\"title\":\"Header_title__cW3ln\",\"actions\":\"Header_actions__1uxXH\",\"actionCont\":\"Header_actionCont__1_Yji\",\"actionItem\":\"Header_actionItem__3wfN5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__QzK70\"};","import React from 'react';\nimport classes from './Logo.module.css';\n\n\n\nconst LogoIcon = (props) => {\n    const size = props.size;\n    const space = props.size/10;\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width={size*3 + space*2} height={size*2 + space} className={classes.logo}>\n            <rect \n                x={size + space} y=\"0\" \n                width={size} height={size} \n                // fill={color} \n            />\n            <rect \n                x={(size) * 2 + space * 2} y=\"0\" \n                width={size} height={size} \n                // fill={color} \n            />\n            <rect \n                x=\"0\"\n                y={size + space}\n                width={size} \n                height={size} \n                // fill={color} \n            />\n            <rect \n                x={size + space} \n                y={size + space} \n                width={size} \n                height={size} \n                // fill={color} \n            />\n        </svg>\n    );\n};\n\nexport default LogoIcon;","import React from \"react\";\n\nimport classes from \"./Header.module.css\";\nimport LogoIcon from \"../Icon/Logo\";\n\nconst Header = (props) => {\n    return (\n        <div className={classes.header}>\n            <h1>\n                <span className={classes.logo}><LogoIcon size={15} /></span>\n                <span className={classes.title}>ReadyPy</span>\n            </h1>\n            <div className={classes.actions}>\n                <nav className={classes.actionCont}>\n                    <div className={classes.actionItem}>\n                        <button onClick={props.handleLayoutChange}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n                                <path d=\"M0,2.3C0,1,0.9,0,2,0h12c1.1,0,2,1,2,2.3v11.4c0,1.3-0.9,2.3-2,2.3H2c-1.1,0-2-1-2-2.3V2.3z M8.5,1.1v13.7H14 c0.6,0,1-0.5,1-1.1V2.3c0-0.6-0.4-1.1-1-1.1H8.5z M7.5,1.1H2c-0.6,0-1,0.5-1,1.1v11.4c0,0.6,0.4,1.1,1,1.1h5.5V1.1z\"/>\n                            </svg>\n                            Layout\n                        </button>\n                    </div>\n                    <div className={classes.actionItem}>\n                        <button onClick={props.handleThemeChange}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n                                <path d=\"M8 15A7 7 0 1 0 8 1v14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16z\" />\n                            </svg>\n                            Theme\n                        </button>\n                    </div>\n                    <div className={classes.actionItem}>\n                        <button onClick={props.runCode}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n                            <path d=\"M13,8L2.7,2v12L13,8z M14.4,6.8c0.7,0.4,0.9,1.3,0.5,1.9c-0.1,0.2-0.3,0.4-0.5,0.5L3.1,15.8c-0.9,0.5-2.2-0.1-2.2-1.2V1.4 c0-1.2,1.3-1.8,2.2-1.2L14.4,6.8z\"/>\n                            </svg>\n                            Run\n                        </button>\n                    </div>\n                </nav>\n            </div>\n        </div>\n    );\n};\n\nexport default Header;","import React, { useCallback } from 'react';\nimport CodeMirror from '@uiw/react-codemirror';\nimport { EditorView } from '@codemirror/view';\nimport { python } from '@codemirror/lang-python';\nimport { keymap } from \"@codemirror/view\";\nimport { defaultKeymap } from '@codemirror/commands';\n\n\n\nconst styleTheme = EditorView.baseTheme({\n    '&.cm-editor.cm-focused': {\n        outline: '0px',\n    }\n});\n\n\nconst Editor = (props) => {\n    const onChange = useCallback((value, viewUpdate) => {\n        props.setValue(value);\n    }, []);\n\n    return (\n        <CodeMirror\n            value={props.value}\n            height=\"100%\"\n            placeholder=\"Write your Python code here...\"\n            basicSetup={{\n                defaultKeymap: false,\n                autocompletion: false\n            }}\n            extensions={[\n                python(),\n                EditorView.lineWrapping,\n                styleTheme,\n                keymap.of([\n                    {\n                        key: 'Shift-Enter',\n                        preventDefault: true,\n                        run() {\n                            props.runCode();\n                        },\n                    },\n                    ...defaultKeymap, // add in all of the default keymappings from codemirror\n                ])\n            ]}\n            onChange={onChange}\n            theme={props.theme}\n        />\n    );\n};\n\nexport default Editor;","import React from 'react';\nimport CodeMirror from '@uiw/react-codemirror';\nimport { ViewPlugin, EditorView } from '@codemirror/view';\nimport { EditorState } from '@codemirror/state';\n\n\nconst Terminal = (props) => {\n\n    const scrollBottom = ViewPlugin.fromClass(\n        class {\n            update(update) {\n                if (update.docChanged) {\n                    update.view.scrollDOM.scrollTop = update.view.scrollDOM.scrollHeight;\n                }\n            }\n        }\n    );\n\n    const placeholder = '>__READYPY.COM__'\n\n    return (\n        <CodeMirror\n            value={props.value}\n            height=\"100%\"\n            placeholder={placeholder}\n            basicSetup={{\n                lineNumbers: false,\n                highlightActiveLine: false,\n                highlightActiveLineGutter: false\n            }}\n            extensions={[\n                EditorView.lineWrapping,\n                EditorView.editable.of(false),\n                EditorState.readOnly.of(true),\n                scrollBottom\n            ]}\n            theme={props.theme}\n        />\n    );\n};\n\nexport default Terminal;","import React, { useEffect } from 'react';\nimport Split from 'react-split-grid';\n\nimport Editor from './Editor';\nimport Terminal from './Terminal';\nimport classes from './Workspace.module.css';\n\n\nconst Workspace = (props) => {\n\n    const removeInnerStyle = () => {\n        const element = document.getElementById('split');\n        if (element) {\n            element.style = '';\n        }\n    };\n\n    useEffect(() => {\n        removeInnerStyle();\n    }, [props.layout]);\n\n    return (\n        <Split\n            render={({\n                getGridProps,\n                getGutterProps,\n            }) => (\n                <div\n                    id='split'\n                    className={`\n                        ${classes['grid']}\n                        ${props.layout === 'col' ? classes['grid-col'] : classes['grid-row']}\n                    `}\n                    {...getGridProps()}\n                >\n                    <div className={classes.panel} id='editor'>\n                        <div className={classes.windowLabelCont}>\n                            <div className={classes.windowLabel}>\n                                <span>Python</span>\n                            </div>\n                            <div className={classes.windowLabel}>\n                                <button onClick={props.runCode}>\n                                    Shift + Enter\n                                </button>\n                            </div>\n                        </div>\n                        <div className={classes.CodeMirror}>\n                            <Editor\n                                value={props.editorValue}\n                                theme={props.theme}\n                                setValue={props.setEditorValue}\n                                runCode={props.runCode}\n                            />\n                        </div>\n                    </div>\n\n                    <div\n                        id='split-gutter'\n                        className={`\n                            ${classes.gutter} \n                            ${props.layout === 'col' ? classes['gutter-col'] : classes['gutter-row']}\n                        `}\n                        {...(props.layout === 'col' ? getGutterProps('column', 1) : getGutterProps('row', 1))}\n                    >\n                    </div>\n\n                    <div className={classes.panel} id='terminal'>\n                        <div className={classes.windowLabelCont}>\n                            <div className={classes.windowLabel}>\n                                <span>Shell</span>\n                            </div>\n                            <div className={classes.windowLabel}>\n                                <button onClick={props.clearTerminal}>\n                                    Clear\n                                </button>\n                            </div>\n                        </div>\n                        <div className={classes.CodeMirror}>\n                            <Terminal\n                                value={props.terminalValue}\n                                theme={props.theme}\n                                setValue={props.setTerminalValue}\n                            />\n                        </div>\n                    </div>\n                </div>\n            )}\n        />\n    );\n};\n\nexport default Workspace;","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport Header from './components/Header/Header';\nimport Workspace from './components/Workspace/Workspace';\nimport { loadPyodide } from \"pyodide\";\n// import { vscodeDarkInit } from '@uiw/codemirror-theme-vscode';\nimport { draculaInit } from '@uiw/codemirror-theme-dracula';\nimport { githubLightInit } from '@uiw/codemirror-theme-github';\n\n\n\n\nfunction App() {\n  const [editorValue, setEditorValue] = useState(\"\");\n  const [mode, setMode] = useState('dark');\n  const [theme, setTheme] = useState(draculaInit({\n    settings: {\n      caret: '#c6c6c6',\n      fontFamily: '\"Menlo\", \"Monaco\", \"Consolas\", \"Andale Mono\", \"Ubuntu Mono\", \"Courier New\", monospace'\n    }\n  }));\n  const [layout, setLayout] = useState(window.innerWidth < 768 ? 'row' : 'col');\n  const [pyodide, setPyodide] = useState(null);\n  const [terminalValue, setTerminalValue] = useState(\"\");\n\n  // setTerminalValue(console_text);\n\n  // Function to initialize Pyodide\n  const initializePyodide = async () => {\n    if (!pyodide) {\n      const py = await loadPyodide({\n        indexURL: \"https://cdn.jsdelivr.net/pyodide/v0.23.3/full\",\n        stdout: (text) => {\n          setTerminalValue((prev_text) => {\n            return prev_text + text + '\\n';\n          });\n        },\n        stderr: (text) => {\n          setTerminalValue((prev_text) => {\n            return prev_text + text + '\\n';\n          });\n        },\n      });\n\n      const fix = {\n        input_fixed: (question) => {\n          let answer = prompt(question);\n          setTerminalValue((prev_text) => prev_text + question + answer + '\\n');\n          return answer;\n        },\n      };\n\n      py.registerJsModule('fix', fix);\n\n      py.runPython(`\n        from fix import input_fixed\n        input = input_fixed\n        __builtins__.input = input_fixed\n      `);\n\n      setPyodide(py);\n    }\n  };\n\n  // Function to run the Python code using Pyodide\n  const runCode = () => {\n    if (pyodide) {\n      setTerminalValue(\"\");\n      pyodide\n        .runPythonAsync(editorValue)\n        .then(() => {\n          setPyodide(null);\n        })\n        .catch((err) => {\n          var lines = err.message.split(\"\\n\");\n          let to = 1;\n          for (const [i, l] of lines.entries()) {\n            if (l.includes('File \"<exec>\"')) {\n              to = i;\n              break;\n            }\n          }\n          lines.splice(1, to - 1);\n          var newtext = lines.join(\"\\n\");\n          setTerminalValue(newtext);\n          setPyodide(null);\n        });\n    }\n  };\n\n  const clearTerminal = () => {\n    setTerminalValue(\"\");\n  };\n\n  const handleThemeChange = () => {\n    if (mode === 'light') {\n      setTheme(draculaInit({\n        settings: {\n          caret: '#c6c6c6',\n          fontFamily: '\"Menlo\", \"Monaco\", \"Consolas\", \"Andale Mono\", \"Ubuntu Mono\", \"Courier New\", monospace'\n        }\n      }));\n      setMode('dark');\n    } else {\n      setTheme(githubLightInit({\n        settings: {\n          caret: '#c6c6c6',\n          fontFamily: '\"Menlo\", \"Monaco\", \"Consolas\", \"Andale Mono\", \"Ubuntu Mono\", \"Courier New\", monospace'\n        }\n      }));\n      setMode('light');\n    }\n  };\n\n  const handleLayoutChange = () => {\n    setLayout((prevLayout) => (prevLayout === 'col' ? 'row' : 'col'));\n  };\n\n  // Load Pyodide on page load\n  useEffect(() => {\n    initializePyodide();\n  }, [pyodide]);\n\n  return (\n    <div id='app' className={mode}>\n      <Header\n        runCode={runCode}\n        updateCode={setEditorValue}\n        handleThemeChange={handleThemeChange}\n        handleLayoutChange={handleLayoutChange}\n      />\n      <Workspace\n        theme={theme}\n        layout={layout}\n        editorValue={editorValue}\n        setEditorValue={setEditorValue}\n        terminalValue={terminalValue}\n        setTerminalValue={setTerminalValue}\n        runCode={runCode}\n        clearTerminal={clearTerminal}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}